# Pattern Library Schema
# Schema for pattern-library.yaml - cumulative library of recurring patterns
# Generated by: Reflection agent
# Version: 1.0

pattern_library:
  metadata:
    version: string
    last_updated: string  # ISO 8601 timestamp
    project: string
    total_patterns: integer
    total_occurrences: integer

  # Patterns organized by category
  patterns:
    - pattern_id: string  # PAT-NNN
      created_at: string  # ISO 8601
      last_updated: string  # ISO 8601

      # Pattern classification
      category: enum  # truth_gap | code_bug | test_issue | process_inefficiency | architecture_drift
      subcategory: string

      # Pattern description
      title: string
      description: string
      symptoms:
        - symptom: string

      # Occurrence tracking
      occurrences: integer
      first_seen: string  # ISO 8601
      last_seen: string  # ISO 8601
      frequency: enum  # rare | occasional | frequent | very_frequent

      # Severity and impact
      severity: enum  # critical | major | minor
      avg_time_to_resolve_hours: float
      avg_rework_required: boolean

      # Examples
      examples:
        - failure_id: string
          timestamp: string
          context: string
          resolution: string

      # Root cause
      root_cause:
        primary: string
        contributing_factors:
          - factor: string
            frequency: enum  # always | usually | sometimes

      # Resolution
      standard_resolution:
        steps:
          - step: string
            duration: string

        preventive_measures:
          - measure: string
            effectiveness: enum  # high | medium | low | unknown

      # Recommendations
      permanent_fix:
        description: string
        implementation_effort: enum  # low | medium | high
        status: enum  # not_started | in_progress | implemented | rejected
        implemented_at: string  # ISO 8601, null if not implemented

      # Effectiveness tracking
      effectiveness:
        recurrence_after_fix: integer  # how many times seen after fix implemented
        prevention_rate: float  # percentage (0-100)
        status: enum  # effective | partially_effective | ineffective | unknown

  # Truth gap patterns
  truth_gap_patterns:
    - pattern_id: string
      title: string
      missing_fact_categories:
        - category: string
          occurrences: integer

      typical_symptoms:
        - symptom: string

      recommended_truth_updates:
        - fact_category: string
          fact_template: string

      occurrences: integer
      resolution_rate: float  # percentage

  # Code bug patterns
  code_bug_patterns:
    - pattern_id: string
      title: string
      bug_type: enum  # logic_error | integration_error | edge_case | null_handling
      typical_location: string  # module or component type

      symptoms:
        - symptom: string

      root_causes:
        - cause: string
          frequency: integer

      preventive_coding_practices:
        - practice: string

      occurrences: integer

  # Test issue patterns
  test_issue_patterns:
    - pattern_id: string
      title: string
      issue_type: enum  # missing_coverage | incorrect_assertion | flaky_test | outdated_test

      symptoms:
        - symptom: string

      root_causes:
        - cause: string

      test_improvements:
        - improvement: string

      occurrences: integer

  # Process inefficiency patterns
  process_inefficiency_patterns:
    - pattern_id: string
      title: string
      inefficiency_type: enum  # bottleneck | rework | manual_process | validation_gap

      symptoms:
        - symptom: string
          time_impact_hours: float

      root_causes:
        - cause: string

      process_improvements:
        - improvement: string
          estimated_time_savings_hours: float

      occurrences: integer

  # Architecture drift patterns
  architecture_drift_patterns:
    - pattern_id: string
      title: string
      drift_type: enum  # undocumented_component | pattern_violation | integration_gap

      symptoms:
        - symptom: string

      root_causes:
        - cause: string

      architecture_updates:
        - update: string

      occurrences: integer

  # Pattern relationships
  pattern_relationships:
    - parent_pattern_id: string
      child_pattern_id: string
      relationship_type: enum  # caused_by | leads_to | similar_to | variant_of
      description: string

  # Pattern trends
  trends:
    most_frequent_patterns:
      - pattern_id: string
        title: string
        occurrences: integer
        trend: enum  # increasing | stable | decreasing

    newly_emerged_patterns:
      - pattern_id: string
        title: string
        first_seen: string
        occurrences: integer

    resolved_patterns:
      - pattern_id: string
        title: string
        last_seen: string
        resolution: string

  # Statistics
  statistics:
    by_category:
      truth_gap: integer
      code_bug: integer
      test_issue: integer
      process_inefficiency: integer
      architecture_drift: integer

    by_severity:
      critical: integer
      major: integer
      minor: integer

    by_status:
      active: integer
      resolved: integer
      prevented: integer

    total_time_lost_hours: float
    total_time_saved_by_prevention_hours: float

# Enums
enums:
  category: [truth_gap, code_bug, test_issue, process_inefficiency, architecture_drift]
  severity: [critical, major, minor]
  frequency: [rare, occasional, frequent, very_frequent]
  effectiveness: [effective, partially_effective, ineffective, unknown]
  status: [not_started, in_progress, implemented, rejected, active, resolved, prevented]
  effort: [low, medium, high]
  trend: [increasing, stable, decreasing]
  relationship_type: [caused_by, leads_to, similar_to, variant_of]
