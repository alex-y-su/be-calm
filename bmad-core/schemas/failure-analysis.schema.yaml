# Failure Analysis Schema
# Schema for failure-analysis.md - root cause analysis of failures
# Generated by: Reflection agent
# Version: 1.0

failure_analysis:
  metadata:
    failure_id: string  # FAIL-YYYY-MM-DD-NNN
    analyzed_at: string  # ISO 8601 timestamp
    analyzed_by: "Reflection Agent"
    version: string
    project: string
    sprint: integer
    phase: string

  # Failure details
  failure:
    type: enum  # eval_failure | oracle_block | gate_failure | validation_failure
    timestamp: string  # ISO 8601
    severity: enum  # critical | major | minor

    # What failed
    failed_artifact:
      artifact_type: string  # test | epic | story | architecture | prd
      artifact_path: string
      artifact_name: string

    failure_message: string
    failure_details: string

    # Context
    phase: string
    story_id: string
    epic_id: string
    related_requirements:
      - requirement_id: string
        requirement_description: string

  # Root cause analysis
  root_cause:
    category: enum  # code_bug | truth_gap | test_error | requirement_ambiguity | architecture_issue
    primary_cause: string
    contributing_factors:
      - factor: string
        impact: enum  # high | medium | low

    # Detailed analysis by category
    code_bug:
      bug_type: string  # logic_error | syntax_error | integration_error
      location: string  # file:line
      code_snippet: string
      expected_behavior: string
      actual_behavior: string

    truth_gap:
      missing_facts:
        - fact_category: string
          fact_description: string
          why_needed: string

      incorrect_facts:
        - fact_id: string
          current_description: string
          should_be: string
          why_wrong: string

    test_error:
      test_issue_type: enum  # incorrect_assertion | missing_coverage | flaky_test
      test_name: string
      test_location: string
      issue_description: string
      correct_test_should: string

    requirement_ambiguity:
      ambiguous_requirement_id: string
      ambiguity_description: string
      interpretation_1: string
      interpretation_2: string
      correct_interpretation: string

    architecture_issue:
      issue_type: enum  # missing_component | incorrect_pattern | integration_gap
      component: string
      issue_description: string
      architecture_expectation: string
      actual_implementation: string

  # Pattern analysis
  pattern_analysis:
    is_recurring: boolean
    occurrences: integer
    first_occurrence: string  # ISO 8601
    last_occurrence: string  # ISO 8601

    similar_failures:
      - failure_id: string
        timestamp: string
        similarity: string

    pattern_id: string  # PAT-NNN, null if not a pattern yet
    pattern_category: string

  # Impact analysis
  impact:
    scope: enum  # story | epic | phase | project
    affected_artifacts:
      - artifact_type: string
        artifact_path: string

    downstream_effects:
      - effect: string
        severity: enum  # high | medium | low

    time_lost_hours: float
    rework_required: boolean
    blocks_progress: boolean

  # Learning
  learning:
    what_we_learned: string
    why_it_happened: string
    how_to_prevent: string

    preventive_measures:
      - measure: string
        implementation: string
        effectiveness: enum  # high | medium | low

    process_improvements:
      - improvement: string
        rationale: string

  # Recommendations
  recommendations:
    immediate_actions:
      - action: string
        priority: enum  # critical | high | medium | low
        owner: string
        estimated_effort: string

    truth_updates:
      - update_type: enum  # add_fact | correct_fact | add_constraint
        target: string  # domain-truth.yaml | terminology-map.yaml
        change_description: string
        new_content: string

    test_improvements:
      - improvement_type: enum  # add_test | fix_test | improve_coverage
        test_name: string
        change_description: string

    validation_rule_changes:
      - rule_type: enum  # oracle | validator | eval
        current_rule: string
        proposed_rule: string
        rationale: string

    workflow_optimizations:
      - optimization: string
        benefit: string
        effort: enum  # low | medium | high

  # Resolution
  resolution:
    status: enum  # pending | in_progress | resolved | wont_fix
    resolved_at: string  # ISO 8601, null if not resolved
    resolved_by: string

    resolution_actions_taken:
      - action: string
        completed_at: string
        outcome: string

    verification:
      verified: boolean
      verification_method: string
      verification_date: string

  # Follow-up
  follow_up:
    added_to_pattern_library: boolean
    pattern_library_id: string

    recommendations_implemented:
      - recommendation_id: string
        status: enum  # implemented | rejected | pending

    future_monitoring:
      - metric: string
        threshold: any
        duration: string  # how long to monitor

# Enums
enums:
  failure_type: [eval_failure, oracle_block, gate_failure, validation_failure]
  severity: [critical, major, minor]
  root_cause_category: [code_bug, truth_gap, test_error, requirement_ambiguity, architecture_issue]
  impact_level: [high, medium, low]
  scope: [story, epic, phase, project]
  status: [pending, in_progress, resolved, wont_fix]
  priority: [critical, high, medium, low]
  effort: [low, medium, high]
