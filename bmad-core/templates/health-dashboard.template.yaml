# Health Dashboard Template
# Template for generating health-dashboard.yaml
# Generated by: Monitor Agent
# Schema: bmad-core/schemas/health-dashboard.schema.yaml

[[LLM: This template is used by the Monitor agent to generate comprehensive health reports.
Fill in all sections based on current metrics and analysis. Use actual data from monitoring
systems, test results, and validation gates. Calculate trends by comparing to historical data.]]

health_dashboard:
  metadata:
    generated_at: {{current_timestamp}}
    generated_by: "Monitor Agent"
    version: "1.0"
    project: {{project_name}}
    sprint: {{current_sprint}}
    phase: {{current_phase}}

  overall_health:
    status: {{overall_status}}  # healthy | warning | critical
    score: {{overall_score}}  # 0-100
    summary: |
      {{health_summary_description}}

  truth_alignment:
    domain_truth_alignment_score:
      value: {{domain_alignment_score}}
      threshold: 85
      status: {{domain_alignment_status}}
      trend: {{domain_alignment_trend}}

    requirements_traceability_score:
      value: {{traceability_score}}
      threshold: 95
      status: {{traceability_status}}
      trend: {{traceability_trend}}
      gaps:
        {{#each traceability_gaps}}
        - requirement_id: {{requirement_id}}
          description: {{description}}
        {{/each}}

    eval_test_coverage:
      value: {{eval_coverage}}
      threshold: 90
      status: {{eval_coverage_status}}
      trend: {{eval_coverage_trend}}
      uncovered_facts:
        {{#each uncovered_facts}}
        - fact_id: {{fact_id}}
          description: {{description}}
        {{/each}}

    validation_chain_integrity:
      value: {{chain_integrity}}
      threshold: 95
      status: {{chain_integrity_status}}
      trend: {{chain_integrity_trend}}
      broken_chains:
        {{#each broken_chains}}
        - chain_id: {{chain_id}}
          break_point: {{break_point}}
        {{/each}}

  code_quality:
    overall_score: {{code_quality_score}}
    status: {{code_quality_status}}

    complexity_score:
      average: {{avg_complexity}}
      max: {{max_complexity}}
      threshold: 10
      status: {{complexity_status}}
      trend: {{complexity_trend}}
      high_complexity_functions:
        {{#each high_complexity_functions}}
        - function: {{function_name}}
          complexity: {{complexity_value}}
          file: {{file_path}}
          line: {{line_number}}
        {{/each}}

    duplication_rate:
      value: {{duplication_rate}}
      threshold: 10.0
      status: {{duplication_status}}
      trend: {{duplication_trend}}

    test_coverage:
      value: {{test_coverage}}
      threshold: 70.0
      status: {{test_coverage_status}}
      trend: {{test_coverage_trend}}
      uncovered_files:
        {{#each uncovered_files}}
        - file: {{file_path}}
          coverage: {{coverage_percentage}}
        {{/each}}

    documentation_coverage:
      value: {{doc_coverage}}
      threshold: 75.0
      status: {{doc_coverage_status}}
      trend: {{doc_coverage_trend}}
      undocumented_functions:
        {{#each undocumented_functions}}
        - function: {{function_name}}
          file: {{file_path}}
          line: {{line_number}}
        {{/each}}

  performance:
    overall_status: {{performance_status}}
    degradation_from_baseline: {{performance_degradation}}

    response_time_p95:
      current: {{p95_current}}
      baseline: {{p95_baseline}}
      degradation: {{p95_degradation}}
      threshold: 10.0
      status: {{p95_status}}
      trend: {{p95_trend}}

    response_time_p99:
      current: {{p99_current}}
      baseline: {{p99_baseline}}
      degradation: {{p99_degradation}}
      threshold: 15.0
      status: {{p99_status}}
      trend: {{p99_trend}}

    throughput:
      current: {{throughput_current}}
      baseline: {{throughput_baseline}}
      degradation: {{throughput_degradation}}
      threshold: -10.0
      status: {{throughput_status}}
      trend: {{throughput_trend}}

    error_rate:
      current: {{error_rate}}
      threshold: 2.0
      status: {{error_rate_status}}
      trend: {{error_rate_trend}}
      recent_errors:
        {{#each recent_errors}}
        - timestamp: {{timestamp}}
          type: {{error_type}}
          message: {{error_message}}
          count: {{error_count}}
        {{/each}}

  validation_health:
    overall_status: {{validation_status}}

    eval_test_pass_rate:
      value: {{eval_pass_rate}}
      threshold: 90.0
      status: {{eval_pass_status}}
      trend: {{eval_pass_trend}}
      failing_tests:
        {{#each failing_tests}}
        - test: {{test_name}}
          failure_message: {{failure_message}}
          first_failed: {{first_failed_timestamp}}
        {{/each}}

    oracle_validation_success:
      value: {{oracle_success_rate}}
      threshold: 95.0
      status: {{oracle_status}}
      trend: {{oracle_trend}}
      recent_blocks:
        {{#each oracle_blocks}}
        - artifact: {{artifact_name}}
          reason: {{block_reason}}
          timestamp: {{block_timestamp}}
        {{/each}}

    validator_traceability_success:
      value: {{validator_success_rate}}
      threshold: 98.0
      status: {{validator_status}}
      trend: {{validator_trend}}

    gate_pass_rate:
      value: {{gate_pass_rate}}
      threshold: 85.0
      status: {{gate_status}}
      trend: {{gate_trend}}
      failed_gates:
        {{#each failed_gates}}
        - story: {{story_id}}
          gate: {{gate_name}}
          reason: {{failure_reason}}
          timestamp: {{failure_timestamp}}
        {{/each}}

  agent_performance:
    overall_status: {{agent_performance_status}}

    oracle_accuracy:
      value: {{oracle_accuracy}}
      threshold: 90.0
      status: {{oracle_accuracy_status}}
      trend: {{oracle_accuracy_trend}}

    eval_test_quality:
      value: {{eval_quality}}
      threshold: 80.0
      status: {{eval_quality_status}}
      trend: {{eval_quality_trend}}

    validator_false_positives:
      value: {{validator_false_positive_rate}}
      threshold: 10.0
      status: {{validator_fp_status}}
      trend: {{validator_fp_trend}}

    reflection_insight_quality:
      value: {{reflection_quality}}
      threshold: 70.0
      status: {{reflection_status}}
      trend: {{reflection_trend}}

  alerts:
    critical:
      {{#each critical_alerts}}
      - alert_id: {{alert_id}}
        message: {{message}}
        timestamp: {{timestamp}}
        metric: {{metric_name}}
        value: {{metric_value}}
        threshold: {{threshold_value}}
      {{/each}}

    warning:
      {{#each warning_alerts}}
      - alert_id: {{alert_id}}
        message: {{message}}
        timestamp: {{timestamp}}
        metric: {{metric_name}}
        value: {{metric_value}}
        threshold: {{threshold_value}}
      {{/each}}

    info:
      {{#each info_alerts}}
      - alert_id: {{alert_id}}
        message: {{message}}
        timestamp: {{timestamp}}
        metric: {{metric_name}}
      {{/each}}

  trends:
    overall_health_trend: {{overall_trend}}
    metrics_improving:
      {{#each improving_metrics}}
      - metric_name: {{metric_name}}
        improvement: {{improvement_percentage}}
      {{/each}}

    metrics_degrading:
      {{#each degrading_metrics}}
      - metric_name: {{metric_name}}
        degradation: {{degradation_percentage}}
      {{/each}}

  recommendations:
    immediate_action_required:
      {{#each critical_recommendations}}
      - recommendation: {{recommendation_text}}
        reason: {{reason}}
        priority: "critical"
      {{/each}}

    suggested_improvements:
      {{#each improvement_suggestions}}
      - recommendation: {{recommendation_text}}
        reason: {{reason}}
        priority: {{priority}}
      {{/each}}

  history:
    previous_health_score: {{previous_score}}
    score_change: {{score_change}}
    days_since_last_critical: {{days_since_critical}}
    total_alerts_this_week: {{alerts_this_week}}
    total_alerts_last_week: {{alerts_last_week}}

[[LLM: After generating this dashboard:
1. Ensure all metrics are calculated from actual data
2. Compare current values to baselines and thresholds
3. Calculate trends using last 7 days of data
4. Generate actionable recommendations based on critical issues
5. Update historical-trends.json with current data points
6. Trigger Reflection agent if critical patterns detected]]
